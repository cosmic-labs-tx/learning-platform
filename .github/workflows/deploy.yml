name: Deploy Production

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  test:
    name: ðŸ§ª Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.18.0
          cache: "npm"

      - name: Install Dependencies
        run: npm ci --no-audit --no-fund

      - name: Type Check
        run: npx tsc --noEmit --pretty

      - name: Lint
        run: npx eslint . --quiet

  deploy:
    name: ðŸš€ Deploy
    runs-on: ubuntu-latest
    environment: production
    needs: test
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }} --debug

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }} --debug

      - name: Deploy to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  migrate:
    name: ðŸ§¬ Apply Migrations
    runs-on: ubuntu-latest
    environment: production
    needs: deploy
    if: success()
    steps:
      - uses: actions/checkout@v4

      - name: Apply pending migrations to the database
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}

  trigger:
    name: ðŸ”« Deploy Trigger
    runs-on: ubuntu-latest
    needs: [deploy, migrate]
    if: success()
    steps:
      - name: Trigger Deploy
        env:
          TRIGGER_ACCESS_TOKEN: ${{ secrets.TRIGGER_ACCESS_TOKEN }}
        run: |
          npx trigger.dev@latest deploy
